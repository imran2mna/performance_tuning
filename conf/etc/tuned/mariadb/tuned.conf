[main]
include=throughput-performance


#==================
# memory management
#==================

[vm]
# bug exists with some distros, better to restart for checking
# due to swapping mechanism, transparent huge pages are not suitable for database
transparent_hugepages=never


[sysctl]

# swapping memory to disk is performance drawback for database
# also need to avoid OOM-killer
# therefore set the swappiness to low value, but not 0
vm.swappiness = 5

#============
# dirty pages
#============

# start the writing at low percentage
# therefore no memory pressure, no disk write delay
vm.dirty_background_ratio=3

# do not force the write until 80% of system, because the system is dedicated for database
# only fails only if unexpected memory usage
vm.dirty_ratio=80


# wakeup the dirty page flushing threads in 1 second
vm.dirty_writeback_centisecs=100

# time duration for dirty page data eligibility for writing (5 seconds)
vm.dirty_expire_centisecs=500

#===========================
# Huge pages & shared memory
#===========================

# database select queries bring up large number of records
# therefore introducing huge pages will reduce TLB lookup delay
# grep Hugepagesize /proc/meminfo
vm.nr_hugepages=256

# due to join & intermediate queries, database needs shared memory
kernel.shmall = 65536
kernel.shmmax = 33554432
kernel.shmmni = 32

# execute ipcs -l for description
kernel.sem = 250	32000	50	128


